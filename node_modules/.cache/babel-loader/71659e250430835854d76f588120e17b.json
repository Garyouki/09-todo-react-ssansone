{"ast":null,"code":"import _classCallCheck from \"/Users/samanthasansone/09-todo-react-ssansone/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/samanthasansone/09-todo-react-ssansone/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/samanthasansone/09-todo-react-ssansone/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/samanthasansone/09-todo-react-ssansone/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/samanthasansone/09-todo-react-ssansone/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/samanthasansone/09-todo-react-ssansone/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/samanthasansone/09-todo-react-ssansone/src/Todo.js\";\nimport React, { Component } from 'react';\nimport './Todo.css';\n\nvar Todo =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Todo, _Component);\n\n  function Todo(props) {\n    var _this;\n\n    _classCallCheck(this, Todo);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Todo).call(this, props));\n    _this.state = {\n      completed: _this.props.completed\n    };\n    _this.checkList = _this.checkList.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Todo, [{\n    key: \"checkList\",\n    value: function checkList(event) {\n      var self = this;\n      var data = {\n        completed: true\n      };\n      var toCheck = event.target.parentNode;\n      var xhttp = new XMLHttpRequest();\n\n      xhttp.onreadystatechange = function () {\n        if (this.readyState == 4 && this.status == 200) {\n          self.setState({\n            completed: true\n          });\n        } else if (this.readyState == 4) {\n          // this.status !== 200, error from server\n          console.log(\"no check\");\n        }\n      };\n\n      xhttp.open(\"PUT\", \"https://cse204.work/todos/\" + toCheck.id, true);\n      xhttp.setRequestHeader(\"Content-type\", \"application/json\");\n      xhttp.setRequestHeader(\"x-api-key\", \"e78d52-d76aec-34ec77-1f346d-940c93\");\n      xhttp.send(JSON.stringify(data));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var className = \"todo\";\n\n      if (this.state.completed) {\n        className = \"todo completed\";\n      }\n\n      return React.createElement(\"div\", {\n        id: \"todo\",\n        className: \"todo\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, \" \", this.props.text, \" \"), React.createElement(\"button\", {\n        id: \"check\",\n        className: \"check\",\n        type: \"checkbox\",\n        onClick: this.checkTodo,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        id: \"delete\",\n        className: \"delete\",\n        onClick: this.props.deleteTodo,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, \"Delete\"));\n    }\n  }]);\n\n  return Todo;\n}(Component);\n\nexport default Todo;","map":{"version":3,"sources":["/Users/samanthasansone/09-todo-react-ssansone/src/Todo.js"],"names":["React","Component","Todo","props","state","completed","checkList","bind","event","self","data","toCheck","target","parentNode","xhttp","XMLHttpRequest","onreadystatechange","readyState","status","setState","console","log","open","id","setRequestHeader","send","JSON","stringify","className","text","checkTodo","deleteTodo"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,YAAP;;IAEMC,I;;;;;AAEF,gBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,8EAAMA,KAAN;AAEA,UAAKC,KAAL,GAAa;AACTC,MAAAA,SAAS,EAAE,MAAKF,KAAL,CAAWE;AADb,KAAb;AAGA,UAAKC,SAAL,GAAiB,MAAKA,SAAL,CAAeC,IAAf,uDAAjB;AANe;AAQlB;;;;8BAESC,K,EAAO;AAEjB,UAAIC,IAAI,GAAE,IAAV;AACI,UAAIC,IAAI,GAAG;AACXL,QAAAA,SAAS,EAAE;AADA,OAAX;AAGJ,UAAIM,OAAO,GAAGH,KAAK,CAACI,MAAN,CAAaC,UAA3B;AAEA,UAAIC,KAAK,GAAG,IAAIC,cAAJ,EAAZ;;AAEAD,MAAAA,KAAK,CAACE,kBAAN,GAA2B,YAAW;AAClC,YAAI,KAAKC,UAAL,IAAmB,CAAnB,IAAwB,KAAKC,MAAL,IAAe,GAA3C,EAAgD;AAE5CT,UAAAA,IAAI,CAACU,QAAL,CAAc;AACVd,YAAAA,SAAS,EAAC;AADA,WAAd;AAIX,SANO,MAMD,IAAI,KAAKY,UAAL,IAAmB,CAAvB,EAA0B;AAE7B;AACAG,UAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACH;AACI,OAZD;;AAcAP,MAAAA,KAAK,CAACQ,IAAN,CAAW,KAAX,EAAkB,+BAA+BX,OAAO,CAACY,EAAzD,EAA6D,IAA7D;AAEAT,MAAAA,KAAK,CAACU,gBAAN,CAAuB,cAAvB,EAAuC,kBAAvC;AACAV,MAAAA,KAAK,CAACU,gBAAN,CAAuB,WAAvB,EAAmC,oCAAnC;AACAV,MAAAA,KAAK,CAACW,IAAN,CAAWC,IAAI,CAACC,SAAL,CAAejB,IAAf,CAAX;AACC;;;6BAIM;AAEP,UAAIkB,SAAS,GAAG,MAAhB;;AACF,UAAI,KAAKxB,KAAL,CAAWC,SAAf,EAA0B;AACxBuB,QAAAA,SAAS,GAAG,gBAAZ;AACD;;AAEC,aAEJ;AAAK,QAAA,EAAE,EAAC,MAAR;AAAe,QAAA,SAAS,EAAC,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEQ;AAAG,QAAA,SAAS,EAAC,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAsB,KAAKzB,KAAL,CAAW0B,IAAjC,MAFR,EAGQ;AAAQ,QAAA,EAAE,EAAE,OAAZ;AAAoB,QAAA,SAAS,EAAC,OAA9B;AAAsC,QAAA,IAAI,EAAC,UAA3C;AAAsD,QAAA,OAAO,EAAE,KAAKC,SAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHR,EAIQ;AAAQ,QAAA,EAAE,EAAE,QAAZ;AAAqB,QAAA,SAAS,EAAC,QAA/B;AAAwC,QAAA,OAAO,EAAE,KAAK3B,KAAL,CAAW4B,UAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJR,CAFI;AAWD;;;;EA/DgB9B,S;;AAkEnB,eAAeC,IAAf","sourcesContent":["import React, { Component } from 'react';\nimport './Todo.css';\n\nclass Todo extends Component {\n\n    constructor(props) {\n        super(props);\n       \n        this.state = {\n            completed: this.props.completed\n        }\n        this.checkList = this.checkList.bind(this);\n       \n    }\n\n    checkList(event) {\n\n    var self= this;\n        var data = {\n        completed: true\n    };\n    var toCheck = event.target.parentNode;\n    \n    var xhttp = new XMLHttpRequest();\n    \n    xhttp.onreadystatechange = function() {\n        if (this.readyState == 4 && this.status == 200) {\n      \n            self.setState({\n                completed:true\n    });\n\n} else if (this.readyState == 4) {\n\n    // this.status !== 200, error from server\n    console.log(\"no check\");\n}\n    };\n    \n    xhttp.open(\"PUT\", \"https://cse204.work/todos/\" + toCheck.id, true);\n    \n    xhttp.setRequestHeader(\"Content-type\", \"application/json\");\n    xhttp.setRequestHeader(\"x-api-key\",\"e78d52-d76aec-34ec77-1f346d-940c93\");\n    xhttp.send(JSON.stringify(data));\n    }\n    \n\n\n  render() {\n\n    var className = \"todo\";\n  if (this.state.completed) {\n    className = \"todo completed\";\n  }\n\n    return (\n    \n<div id=\"todo\" className=\"todo\">\n        \n        <p className=\"text\"> {this.props.text} </p>\n        <button id= \"check\" className=\"check\" type=\"checkbox\" onClick={this.checkTodo}></button>\n        <button id= \"delete\" className=\"delete\" onClick={this.props.deleteTodo}>Delete</button>\n\n        \n      </div>\n    );\n  }\n}\n\nexport default Todo;\n"]},"metadata":{},"sourceType":"module"}